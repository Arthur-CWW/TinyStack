import { Post } from "@prisma/client";
import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import Link from "next/link";
import { IoMdNotifications as BellOpen } from "react-icons/io";

import { useState } from "react";

import { api } from "~/utils/api";
import { Bell } from "lucide-react";
import {
  DropdownMenuLabel,
  DropdownMenuPortal,
  DropdownMenuShortcut,
  DropdownMenuSub,
  DropdownMenuSubContent,
  DropdownMenuSubTrigger,
} from "~/components/ui/dropdown-menu";
import { SplashBackground } from "../components/svgs/SplashBackground";
import { Logo } from "../components/svgs/logo";
import { Navbar } from "~/components/layout";
export default function Home() {
  const hello = api.post.check.useQuery({ text: "from tRPC" });
  const [blogPost, setBlogPost] = useState<Post[]>([]);

  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.post.checkSecret.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined },
  );
  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {sessionData ? (
        <>
          <Navbar />
          <main className="container p-3">
            <TestPost />
            <h1>Secret Message</h1>
            <p>{secretMessage}</p>
          </main>
        </>
      ) : (
        <>
          <header
            className="flex w-full items-baseline justify-between bg-orange   p-4
        "
          >
            <Link href="">
              <Logo />
            </Link>
            <div className="flex items-baseline gap-4 pt-1">
              <Link href="story">Our Story</Link>
              <Link href="membership"> Membership</Link>
              <Link href="write">Write</Link>
              <Link href="auth">Sign in</Link>
              {/* pill button */}
              <button className="rounded-full bg-black p-2 font-semibold text-white">
                {/* todo signup flow */}
                <Link href="signup-flow">Get started</Link>
              </button>
            </div>
          </header>
          <main className="  flex justify-between border-y-[1px]  border-black bg-orange px-3">
            <div className="container right-0 flex max-w-md flex-col items-center justify-center gap-12 px-4 py-24">
              <h1 className="text-5xl font-extrabold tracking-tight text-black sm:text-[5rem]">
                Stay curious
              </h1>
              <div className="flex flex-col items-center gap-2">
                <p className="text-2xl text-black">
                  {hello.data ? hello.data.greeting : "Loading tRPC query..."}
                </p>
                <AuthShowcase />
              </div>
            </div>
            <div className="relative w-[585px]">
              <SplashBackground className="absolute bottom-0 right-0 " />
            </div>
            {/* get new blogpost */}
            {/* <button onClick */}
          </main>
        </>
      )}
    </>
  );
}

// import {Post} from "@prisma/client";
function TestPost() {
  const { data: sessionData } = useSession();
  const [blogPost, setBlogPost] = useState<Post>({} as Post);
  if (!sessionData || !sessionData?.user || !sessionData?.user?.name) {
    return undefined;
  }

  const { user } = sessionData;
  const { name, email, image, id } = user;
  if (!name || !email || !image || !id) {
    return undefined;
  }

  const userPosts = api.post.getUserPosts.useQuery({ author: name });
  const { data, mutate: createNewPost } = api.post.createPost.useMutation();
  console.log("user", user);
  console.log("userPosts", userPosts);
  console.log("data", data);
  return (
    <form
      className="container flex flex-col gap-3 p-3"
      onSubmit={async (e) => {
        e.preventDefault();
      }}
    >
      {/* {user.id}
      <input
        type="text"
        placeholder="input"
        className="border-none bg-transparent placeholder-slate-500 outline-none"
      /> */}
      <button
        className="rounded-full  p-2 font-semibold"
        onClick={async () => {
          // const newPost = await api.post.createPost.useMutation({
          // });
          const newPost = createNewPost({
            title: "This week glob",
            category: "BusinessEntrepreneurship",
            content: "tesfjdksjfkldsajfklt",
            tags: ["test"],
            published: true,
          });
          // console.log("newPost", newPost);
        }}
      >
        send post
      </button>
    </form>
  );
}

function AuthShowcase() {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.post.checkSecret.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined },
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-black">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-black no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
}
